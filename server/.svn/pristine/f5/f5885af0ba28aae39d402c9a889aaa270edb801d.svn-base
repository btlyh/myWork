package com.cambrian.dfhm.friend.logic;

import java.util.HashMap;
import java.util.Map;

import com.cambrian.common.net.DataAccessException;
import com.cambrian.dfhm.Lang;
import com.cambrian.dfhm.common.Player;
import com.cambrian.dfhm.friend.dao.FriendDao;
import com.cambrian.dfhm.friend.entity.FriendInfo;
import com.cambrian.game.Session;
import com.cambrian.game.ds.DataServer;

/**
 * 类说明：好友管理器
 * 
 * @author：LazyBear
 */
public class FriendManager
{

	/* static fields */
	private static FriendManager instance=new FriendManager();

	/* static methods */
	public static FriendManager getInstance()
	{
		return instance;
	}

	/* fields */
	/** 好友数据访问对象 */
	FriendDao dao;
	/** 数据服务器 */
	DataServer ds;

	/* constructors */

	/* properties */
	public void setFriendDao(FriendDao dao)
	{
		this.dao=dao;
	}
	public void setDS(DataServer ds)
	{
		this.ds=ds;
	}
	/* init start */

	/* methods */
	/**
	 * 申请好友
	 * 
	 * @param player 玩家对象
	 * @param name 目标昵称
	 */
	public void applyFirend(Player player,String name)
	{
		String error=checkApplyFirend(name,player);
		if(error!=null)
		{
			throw new DataAccessException(601,error);
		}
	}

	/**
	 * 检查申请好友
	 * 
	 * @param name 目标昵称
	 * @return
	 */
	private String checkApplyFirend(String name,Player player)
	{
		String error=null;
		if(name.length()<1)
		{
			error=Lang.F1501;
		}
		if(player.friendInfo.friendList.size()==FriendInfo.MAX_FRIENDLIST_SIZE)
		{
			error=Lang.F1503;
		}
		int userId=dao.getUserIdByName(name);
		if(userId==0)
		{
			error=Lang.F1502;
		}
		FriendInfo friendInfo=getFriendInfo(userId);
		if(friendInfo.friendList.size()==FriendInfo.MAX_FRIENDLIST_SIZE)
		{
			error=Lang.F1504;
		}
		for(Integer integer:friendInfo.friendList)
		{
			if((int)player.getUserId()==integer)
			{
				error=Lang.F1505;
			}
		}
		for(Integer integer:friendInfo.applyList)
		{
			if((int)player.getUserId()==integer)
			{
				error=Lang.F1506;
			}
		}
		return error;
	}

	/**
	 * 获取好友信息
	 * 
	 * @param name 玩家昵称
	 * @return
	 */
	private FriendInfo getFriendInfo(int userId)
	{
		FriendInfo friendInfo=null;
		Session[] sessions=ds.getSessionMap().getSessions();
		for(Session session:sessions)
		{
			if(session!=null)
			{
				Player player=(Player)session.getSource();
				if(player!=null)
				{
					if((int)player.getUserId()==userId)
					{
						friendInfo=player.friendInfo;
					}
				}
			}
		}
		if(friendInfo==null)
		{
			friendInfo=dao.getFriendInfo(userId);
		}
		return friendInfo;
	}
	
	/**
	 * 从会话中获取玩家对象
	 * @param userId 用户ID
	 * @return
	 */
//	private Player getPlayerInSession(int userId)
//	{
//		
//	}
}
