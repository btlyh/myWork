package com.cambrian.dfhm.dc;

import java.util.List;

import com.cambrian.common.field.Field;
import com.cambrian.common.field.FieldKit;
import com.cambrian.common.field.Fields;
import com.cambrian.common.field.IntField;
import com.cambrian.common.field.StringField;
import com.cambrian.common.log.Logger;
import com.cambrian.common.net.ByteBuffer;
import com.cambrian.common.net.DataAccessException;
import com.cambrian.common.sql.ConnectionManager;
import com.cambrian.common.sql.DBKit;
import com.cambrian.common.util.ArrayList;
import com.cambrian.common.util.ChangeAdapter;
import com.cambrian.common.util.TextKit;
import com.cambrian.dfhm.Lang;
import com.cambrian.dfhm.common.Player;
import com.cambrian.dfhm.mail.Mail;
import com.cambrian.game.cc.SidEncoder;
import com.cambrian.game.dc.DBAccess;
import com.cambrian.game.util.DBListManager;

/**
 * 类说明：玩家信息取存
 * 
 * @version 2013-5-13
 * @author HYZ (huangyz1988@qq.com)
 */
public class GameDCAccess extends ChangeAdapter implements DBAccess
{

	private static final Logger log = Logger.getLogger(GameDCAccess.class);
	DBListManager dblist;
	/** Sid编码器 */
	SidEncoder sidEncoder = new SidEncoder();
	ConnectionManager cm;

	public void setDBListManager(DBListManager dblist)
	{
		this.dblist = dblist;
	}

	public void setConnectionManager(ConnectionManager cm)
	{
		this.cm = cm;
	}

	public boolean canAccess()
	{
		return true;
	}

	public ByteBuffer load(String uid, String sid)
	{
		if (log.isInfoEnabled())
			log.info("load, uid=" + uid + ", sid=" + sid);
		if (uid == null)
			throw new DataAccessException(DataAccessException.SERVER_ACCESS_REFUSED, Lang.F611_DE);
		if (sid == null)
			throw new DataAccessException(DataAccessException.SERVER_ACCESS_REFUSED, Lang.F611_DE);
		String str = sidEncoder.parseSid(sid);
		String[] strs = TextKit.split(str, ':');
		return load(TextKit.parseLong(uid), strs);
	}

	public ByteBuffer load(long uid, String[] strs)
	{
		Player p = new Player();
		p.setUserId(uid);
		loadPlayer(p, strs);
		ByteBuffer data = new ByteBuffer();
		p.dbBytesWrite(data);
		if (log.isDebugEnabled())
			log.debug("load ok, player=" + p);
		return data;
	}

	public boolean loadPlayer(Player p, String[] strs)
	{
		Field[] array = new Field[8];
		array[0] = FieldKit.create("userid", (int) p.getUserId());
		array[1] = FieldKit.create("nickname", p.getNickname());
		array[2] = FieldKit.create("money", p.getMoney());
		array[3] = FieldKit.create("gold", p.getGold());
		array[4] = FieldKit.create("curToken", p.getCurToken());
		array[5] = FieldKit.create("maxToken", p.getCurToken());
		array[6] = FieldKit.create("soul", p.getSoul());
		array[7] = FieldKit.create("logoutTime",p.getLogoutTime());
		Field key = FieldKit.create("userid", (int) p.getUserId());
		Fields fields = new Fields(array);
		int i = DBKit.get("player", cm, key, fields);
		if (i == DBKit.EXCEPTION)
			throw new DataAccessException(DataAccessException.SERVER_INTERNAL_ERROR, Lang.F611_DE);
		System.err.println("i ===" + i);
		if (i == DBKit.RESULTLESS)
		{
			initNewPlayer(p);
			System.out.println("init player   p=" + p);
			return true;
		}
		p.setNickname(((StringField) array[1]).value);
		p.setMoney(((IntField) array[2]).value);
		p.setGold(((IntField) array[3]).value);
		p.setCurToken(((IntField) array[4]).value);
		p.setMaxToken(((IntField) array[5]).value);
		p.setSoul(((IntField) array[6]).value);
		loadPlayerVar(p);
		loadPlayerLog(p);
		return false;
	}

	public void initNewPlayer(Player p)
	{
		long uid = p.getUserId();
		int serverId = (int) (uid >> 32);
		int userid = (int) uid;
		if (log.isInfoEnabled())
			log.info("load ok, initNewPlayer, serverId=" + serverId + ", userid=" + userid + ", nickName=" + p.getNickname());
		p.setNickname("player" + userid);// TODO 昵称默认设置
		p.setMoney(2000000000);
		p.setGold(2000000000);
		p.init();
	}

	public void loadPlayerVar(Player p)
	{
		// Field[] array = new Field[2];
		// array[0] = FieldKit.create("userid", (int)p.getUserId());
		// array[1] = FieldKit.create("cardBag", (byte[])null);
		// array[2]=FieldKit.create("task",(byte[])null);
		// array[3]=FieldKit.create("friend",(byte[])null);
		// array[4]=FieldKit.create("plantgun",(byte[])null);
		// array[5]=FieldKit.create("card",(byte[])null);
		// Field key = FieldKit.create("userid", (int)p.getUserId());
		// Fields fields = new Fields(array);
		// int i = DBKit.get("player_varfields",cm,key,fields);
		// if(i == DBKit.EXCEPTION) // ||i==DBKit.RESULTLESS
		// throw new DataAccessException(
		// DataAccessException.SERVER_INTERNAL_ERROR,Lang.F611_DE);
		// array = fields.getFields();
		// // -----背包----
		// byte[] bytes = ((ByteArrayField)array[1]).value;
		// CardBag bag = new CardBag();
		// if(bytes != null && bytes.length > 0)
		// bag.dbBytesRead(new ByteBuffer(bytes));
		// p.setCardBag(bag);
		// // -----任务----
		// bytes=((ByteArrayField)array[2]).value;
		// TaskContainer task=new TaskContainer();
		// if(bytes!=null&&bytes.length>0)
		// task.dbBytesRead(new ByteBuffer(bytes));
		// p.setTask(task);
		// // -----好友列表----
		// bytes=((ByteArrayField)array[3]).value;
		// FriendList friendList=new FriendList();
		// if(bytes!=null&&bytes.length>0)
		// friendList.dbBytesRead(new ByteBuffer(bytes));
		// p.setFriendList(friendList);
		// // -----植物炮----
		// bytes=((ByteArrayField)array[4]).value;
		// Bag plantGunList=new Bag();
		// if(bytes!=null&&bytes.length>0)
		// plantGunList.dbBytesRead(new ByteBuffer(bytes));
		// p.setPlantGunList(plantGunList);
		// // -----卡片图鉴----
		// bytes=((ByteArrayField)array[5]).value;
		// CardContainer card=new CardContainer();
		// if(bytes!=null&&bytes.length>0)
		// card.dbBytesRead(new ByteBuffer(bytes));
		// p.setCard(card);

		// // -----加载玩家邮件----
		ArrayList list = new ArrayList();
		Field[] array = new Field[11];
		array[0] = FieldKit.create("mailId", 0L);
		array[1] = FieldKit.create("state", 0);
		array[2] = FieldKit.create("sendTime", 0L);
		array[3] = FieldKit.create("title", (String) null);
		array[4] = FieldKit.create("content", (String) null);
		array[5] = FieldKit.create("cardList", (String) null);
		array[6] = FieldKit.create("gold", 0);
		array[7] = FieldKit.create("money", 0);
		array[8] = FieldKit.create("token", 0);
		array[9] = FieldKit.create("soulPoint", 0);
		array[10] = FieldKit.create("normalPoint", 0);
		Fields fields = new Fields(array);
		DBKit.getAll("t_mail", cm, FieldKit.create("userId", p.getUserId()), fields, list);
		for (int i = 0; i < list.size(); i++)
		{
			Mail mail = new Mail();
			fields = (Fields) list.get(i);
			mail.setMailId(Long.parseLong(fields.get("mailId").getValue().toString()));
			mail.setState(Integer.parseInt(fields.get("state").getValue().toString()));
			mail.setSendTime(Long.parseLong(fields.get("sendTime").getValue().toString()));
			mail.setTitle(fields.get("title").toString());
			mail.setContent(fields.get("content").toString());
			String cardList = fields.get("cardList").toString();
			String[] cardLists = cardList.split("/");
			for (int j = 0; j < cardLists.length; j++)
			{
				mail.addCard(Integer.parseInt(cardLists[j]));
			}
			mail.setGold(Integer.parseInt(fields.get("gold").getValue().toString()));
			mail.setMoney(Integer.parseInt(fields.get("money").getValue().toString()));
			mail.setToken(Integer.parseInt(fields.get("token").getValue().toString()));
			mail.setSoulPoint(Integer.parseInt(fields.get("soulPoint").getValue().toString()));
			mail.setNormalPoint(Integer.parseInt(fields.get("normalPoint").getValue().toString()));
			p.addMail(mail);
		}
	}

	private void loadPlayerLog(Player p)
	{
		// Field[] array=new Field[10];
		// array[0]=FieldKit.create("userid",(int)p.getUserId());
		// array[1]=FieldKit.create("money",0);
		// array[2]=FieldKit.create("login",0);
		// array[3]=FieldKit.create("bullet",0);
		// array[4]=FieldKit.create("prop",0);
		// array[5]=FieldKit.create("hitting",0);
		// array[6]=FieldKit.create("boss",0);
		// array[7]=FieldKit.create("interacts",0);
		// array[8]=FieldKit.create("zombles",(byte[])null);
		// array[9]=FieldKit.create("seeds",(byte[])null);
		// Field key=FieldKit.create("userid",(int)p.getUserId());
		// Fields fields=new Fields(array);
		// int i=DBKit.get("player_log",cm,key,fields);
		// if(i==DBKit.EXCEPTION)
		// throw new DataAccessException(
		// DataAccessException.SERVER_INTERNAL_ERROR,Lang.F611_DE);
		// array=fields.getFields();
		// p.playerLog.money=((IntField)array[1]).value;
		// p.playerLog.login=((IntField)array[2]).value;
		// p.playerLog.bullet=((IntField)array[3]).value;
		// p.playerLog.prop=((IntField)array[4]).value;
		// p.playerLog.hitting=((IntField)array[5]).value;
		// p.playerLog.boss=((IntField)array[6]).value;
		// p.playerLog.interacts=((IntField)array[7]).value;
		//
		// byte[] bytes=((ByteArrayField)array[8]).value;
		// if(bytes!=null&&bytes.length>0)
		// p.playerLog.dbBytesReadZombles(new ByteBuffer(bytes));
		// bytes=((ByteArrayField)array[9]).value;
		// if(bytes!=null&&bytes.length>0)
		// p.playerLog.dbBytesReadSeeds(new ByteBuffer(bytes));
	}

	/** 玩家字段映射 */
	private Fields playerMapping(Player p)
	{
		Field[] array = new Field[8];
		array[0] = FieldKit.create("userid", (int) p.getUserId());
		array[1] = FieldKit.create("nickname", p.getNickname());
		array[2] = FieldKit.create("money", p.getMoney());
		array[3] = FieldKit.create("gold", p.getGold());
		array[4] = FieldKit.create("curToken", p.getCurToken());
		array[5] = FieldKit.create("maxToken", p.getCurToken());
		array[6] = FieldKit.create("soul", p.getSoul());
		array[7] = FieldKit.create("logoutTime", p.getLogoutTime());
		return new Fields(array);
	}

	/** 邮件字段映射 */
	private Fields mailMapping(long userId, Mail mail)
	{
		Field[] array = new Field[12];
		array[0] = FieldKit.create("mailId", mail.getMailId());
		array[1] = FieldKit.create("state", mail.getState());
		array[2] = FieldKit.create("sendTime", mail.getSendTime());
		array[3] = FieldKit.create("title", mail.getTitle());
		array[4] = FieldKit.create("content", mail.getContent());
		array[5] = FieldKit.create("cardList", mail.getCardListStr());
		array[6] = FieldKit.create("gold", mail.getGold());
		array[7] = FieldKit.create("money", mail.getMoney());
		array[8] = FieldKit.create("token", mail.getToken());
		array[9] = FieldKit.create("soulPoint", mail.getSoulPoint());
		array[10] = FieldKit.create("normalPoint", mail.getNormalPoint());
		array[11] = FieldKit.create("userId", userId);
		return new Fields(array);
	}

	public boolean save(String id, ByteBuffer data)
	{
		int offset = data.offset();
		// TODO 序列化Player
		Player p = new Player();
		p.dbBytesRead(data);
		data.setOffset(offset);
		return save(p);
	}

	public boolean save(Player p)
	{
		Field key = FieldKit.create("userid", (int) p.getUserId());
		Fields playerFields = playerMapping(p);
		DBKit.set("player", cm, key, playerFields);
		long userId = p.getUserId();
		List<Mail> mailList = p.getMailList();
		for (Mail mail : mailList)
		{
			Fields mailFields = mailMapping(userId, mail);
			DBKit.set("t_mail", cm, key, mailFields);
		}
		return true;
	}
}
