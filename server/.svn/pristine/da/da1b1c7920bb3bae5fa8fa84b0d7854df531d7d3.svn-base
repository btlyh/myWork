package com.cambrian.dfhm.instancing;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import com.cambrian.common.net.DataAccessException;
import com.cambrian.common.util.TimeKit;
import com.cambrian.dfhm.Lang;
import com.cambrian.dfhm.common.Player;

/**
 * 类说明：副本管理器
 * 
 * @author：LazyBear
 * 
 */
public class InstancingManager
{

	/* static fields */
	private static InstancingManager instance = new InstancingManager();
	/** 副本类型 1主线 2挑战 3穿越（日常） 4活动 */
	private static int NORMAL = 1, HARD = 2, CROSS = 3, ACTIVITY = 4;
	/** NPC SID范围 */
	private static int MINSID = 100000, MAXSID = 199999;
	/** 挑战NPC 击杀标准 */
	private static int KILLED = -1;
	/** NPC是BOSS */
	private static int isBoss = 1;

	/* static methods */
	public static InstancingManager getInstance()
	{
		return instance;
	}

	/* fields */

	/* constructors */

	/* properties */

	/* init start */

	/* methods */

	/** 进入活动副本 */
	public ArrayList<Integer> enterInstancing()
	{
		Instancing activeInstancing = Instancing.getInstancing();

		int[] NPCSids = activeInstancing.getArrayNPC();

		ArrayList<Integer> openActiveNPC = new ArrayList<Integer>();

		NPC npc = null;
		for (int i = 0; i < NPCSids.length; i++)
		{
			npc = (NPC) NPC.factory.getSample(NPCSids[i]);

			if (npc.getOpenDay() == TimeKit.getDayOfWeek())
			{
				openActiveNPC.add(npc.getSid());
			}
		}
		return openActiveNPC;
	}

	/** 攻击NPC */
	public void attackNPC(int sid, Player player)
	{
		Map<String, Object> resultMap = checkAttackNPC(sid, player);
		String error = (String) resultMap.get("error");
		if (error != null)
		{
			throw new DataAccessException(601, error);
		}
		NPC npc = (NPC) resultMap.get("npc");

		// 需要加入战斗接口,等战斗接口出来后在调用,获得战斗结果
		boolean fightResult = false;

		player.decrToken(npc.getNeedToken());
		if (fightResult)
		{
			if (npc.getType() == NORMAL)// 普通NPC
			{
				if (npc.getNextIndex() > player.getCurIndexForCorssNPC())
				{
					player.setCurIndexForNormalNPC(npc.getNextIndex());
				}
				if (npc.getIsBoss() == isBoss)
				{
					if (npc.getHardIndex() > player.getCurIndexForHardNPC())
					{
						player.setCurIndexForHardNPC(npc.getHardIndex());
					}
					if (npc.getCrossIndex() > player.getCurIndexForCorssNPC())
					{
						player.setCurIndexForCorssNPC(npc.getCrossIndex());
					}
				}
			}
			if (npc.getType() == HARD)// 挑战NPC
			{
				if (npc.getIsBoss() != isBoss && npc.getNextIndex() > player.getCurIndexForHardNPC())
				{
					player.setCurIndexForHardNPC(npc.getNextIndex());
				}
				AttRecord attRecord = new AttRecord(npc.getSid(), KILLED, npc.getType());
				player.addAttRecord(attRecord);
			}
			if (npc.getType() == CROSS)// 穿越NPC
			{
				if (npc.getIsBoss() != isBoss && npc.getNextIndex() > player.getCurIndexForCorssNPC())
				{
					player.setCurIndexForCorssNPC(npc.getNextIndex());
				}
			}
		}
		// 记录次数 只限穿越和活动
		if (npc.getType() == CROSS || npc.getType() == ACTIVITY)
		{
			boolean exist = false;
			for (AttRecord attRecord : player.getAttRecords())
			{
				if (attRecord.getSidNPC() == npc.getSid())
				{
					attRecord.inAttacks(1);
					exist = true;
					break;
				}
			}
			if (!exist)
			{
				AttRecord attRecord = new AttRecord(npc.getSid(), 1, npc.getType());
				player.addAttRecord(attRecord);
			}
		}
	}

	/** 检查攻击NPC */
	private Map<String, Object> checkAttackNPC(int sid, Player player)
	{
		Map<String, Object> resultMap = new HashMap<String, Object>();
		if (sid < MINSID || sid > MAXSID)
		{
			resultMap.put("error", Lang.F1401);
			return resultMap;
		}
		if (player.getCurToken() < 1)
		{
			resultMap.put("error", Lang.F1403);
			return resultMap;
		}

		NPC npc = (NPC) NPC.factory.getSample(sid);

		if (player.getCurToken() < npc.getNeedToken())
		{
			resultMap.put("error", Lang.F1404);
			return resultMap;
		}

		if (npc.getType() == NORMAL)
		{
			if (player.getCurIndexForNormalNPC() < npc.getIndex())
			{
				resultMap.put("error", Lang.F1402);
				return resultMap;
			}
		}
		ArrayList<AttRecord> attRecords = player.getAttRecords();
		AttRecord checkRecord = null;
		if (attRecords != null && attRecords.size() > 0)
		{
			for (AttRecord attRecord : attRecords)
			{
				if (attRecord.getSidNPC() == npc.getSid())
				{
					checkRecord = attRecord;
				}
			}
		}
		if (npc.getType() == HARD)
		{
			if (player.getCurIndexForHardNPC() < npc.getIndex())
			{
				resultMap.put("error", Lang.F1402);
				return resultMap;
			}
			if (checkRecord != null)
			{
				if (checkRecord.getAttacks() == KILLED)
				{
					resultMap.put("error", Lang.F1406);
					return resultMap;
				}
			}

		}
		if (npc.getType() == CROSS)
		{
			if (player.getCurIndexForCorssNPC() < npc.getIndex())
			{
				resultMap.put("error", Lang.F1402);
				return resultMap;
			}
			if (checkRecord != null)
			{
				if (checkRecord.getAttacks() >= npc.getAttConfine())
				{
					resultMap.put("error", Lang.F1407);
					return resultMap;
				}
			}
		}
		if (npc.getType() == ACTIVITY)
		{
			if (npc.getOpenDay() != TimeKit.getDayOfWeek())
			{
				resultMap.put("error", Lang.F1405);
				return resultMap;
			}
			if (checkRecord != null)
			{
				if (checkRecord.getAttacks() >= npc.getAttConfine())
				{
					resultMap.put("error", Lang.F1407);
					return resultMap;
				}
			}
		}
		resultMap.put("error", null);
		resultMap.put("npc", npc);
		return resultMap;
	}

}
